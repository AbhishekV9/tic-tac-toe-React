{"version":3,"sources":["components/Square.js","components/Gameboard.js","components/App.js","index.js"],"names":["Square","props","secondClass","x","o","classes","className","onClick","handle","index","squareArray","lines","Gameboard","useState","squares","setSquares","winner","setWinner","showResult","setShowResult","handleClick","filter","squareValue","length","copySquares","slice","useEffect","isComputerTurn","checkLines","a","b","c","threeSquares","values","map","JSON","stringify","sort","playerWon","computerMark","computerWinningChance","console","log","blockPlayer","closeToWin","EmptyIndex","square","val","Math","ceil","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31d70723.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = (props) => {\r\n    const secondClass=props.x ? null : props.o ?\"computer\" : \"\" ;\r\n    const classes=`square ${secondClass}`\r\n    return (\r\n        <div className={classes} onClick={()=>props.handle(props.index)}>\r\n          {props.x ?'x' : props.o ?\"o\" : \"\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport Square  from './Square'\r\n\r\nconst squareArray=[null,null,null,null,null,null,null,null,null]\r\n\r\nconst lines=[\r\n    [0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[2,4,6],[0,4,8]\r\n]\r\n\r\nexport const Gameboard = () => {\r\n    const [squares,setSquares]=useState(squareArray);\r\n    const [winner,setWinner]=useState(\"\");\r\n    const [showResult,setShowResult]=useState(false);\r\n    \r\n    useEffect(()=>{\r\n        const filledSquares=squares.filter((squareValue)=>{\r\n            return (squareValue!==null)\r\n        })\r\n        const isComputerTurn=filledSquares.length %2 ===1;\r\n        const checkLines=(a,b,c)=>{\r\n            return lines.filter(threeSquares=>{\r\n                const values=threeSquares.map(index=>squares[index]);\r\n               return JSON.stringify(values.sort())===JSON.stringify([a,b,c].sort());\r\n            })\r\n        }\r\n        const playerWon=checkLines('x','x','x');\r\n        const computerWon=checkLines('o','o','o');\r\n        if(computerWon.length>0){\r\n            setWinner(\"computer\");\r\n            setShowResult(true);\r\n            return;\r\n        }\r\n        if(playerWon.length>0){\r\n            setWinner(\"you\");\r\n            setShowResult(true);\r\n            return;\r\n\r\n        }\r\n        const computerMark=index=>{\r\n            let copySquares=squares.slice();  \r\n            copySquares[index]='o';\r\n            setSquares(copySquares)\r\n        }\r\n\r\n        if(isComputerTurn){\r\n\r\n            const computerWinningChance=checkLines('o','o',null);\r\n            if(computerWinningChance.length>0){\r\n                console.log(\"fdfdfdfdfdf\")\r\n                const winningIndex=computerWinningChance[0].filter(index=>squares[index]===null)[0];\r\n                computerMark(winningIndex);\r\n                return;\r\n            }\r\n\r\n            const blockPlayer=checkLines('x','x',null);\r\n            if(blockPlayer.length>0){\r\n                const blockIndex=blockPlayer[0].filter(index=>squares[index]===null)[0];\r\n                computerMark(blockIndex);\r\n                return;\r\n            }\r\n            \r\n            const closeToWin=checkLines('o',null,null);\r\n            console.log(closeToWin)\r\n            if(closeToWin.length>0){\r\n                const nextMoveIndex=closeToWin[0].filter(index=>squares[index]===null)[0];\r\n                computerMark(nextMoveIndex);\r\n                return\r\n            }\r\n\r\n            const EmptyIndex=squares.map((square,index)=>{\r\n                 return square===null?index:null\r\n            }).filter(val=>val!==null);\r\n            if(EmptyIndex.length!==0){\r\n                const randomIndex=EmptyIndex[Math.ceil(Math.random()*EmptyIndex.length)]\r\n                computerMark(randomIndex);\r\n            }\r\n        }\r\n    },[squares])\r\n\r\n    function resetAll(){\r\n        setSquares(squareArray);\r\n        setWinner(\"\");\r\n        setShowResult(false);\r\n    }\r\n\r\n    function handleClick(index){\r\n        if(squares[index]!=null){\r\n            return;\r\n        }\r\n        const filledSquares=squares.filter((squareValue)=>{\r\n            return (squareValue!==null)\r\n        })\r\n        const ismyTurn=filledSquares.length %2 === 0;\r\n        if(ismyTurn && !showResult){\r\n            let copySquares=squares.slice();  //we can also use slice to clone an array\r\n            copySquares[index]='x';\r\n            setSquares(copySquares);\r\n        }\r\n    }\r\n\r\n    console.log(winner,showResult)\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"game-board\">\r\n            {squares.map((squareValue,index)=> \r\n                <Square \r\n                key={index} \r\n                handle={handleClick} \r\n                index={index}\r\n                x={squareValue==='x'?true:false}\r\n                o={squareValue==='o'?true:false} \r\n                />\r\n            )}\r\n        </div>\r\n        <div >\r\n            {showResult ? winner==='you' ? <div  className=\"result\" ><p>You Won</p></div>:<div  className=\"result\"><p>You Lost</p></div>:null}\r\n        </div>\r\n        <button className=\"reset\" onClick={resetAll}>RESET</button>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Gameboard } from \"./Gameboard\";\n\n\n\nfunction App() {\n  return (\n    <>\n    <h1 className=\"name\">Tic-Tac-Toe</h1>\n    <div className=\"app\">\n      <Gameboard/> \n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}